# Add your additional Hyprland configurations here
# 
# This is an additional key binding 
# bind = $mainMod CTRL, up, workspace, empty
# 
# Example for xwayland
# xwayland {
#   force_zero_scaling = true
# }

# qt5ct environment variable
# env = QT_QPA_PLATFORMTHEME,qt5ct

# SDL version
env = SDL_VIDEODRIVER,wayland
# env = SDL_VIDEODRIVER,x11

# No Hardware Cursor
# cursor {
#     no_hardware_cursors = false
# }

# Load nwg-dock-hyprland
# Install it first with yay -S nwg-hyprland-dock
# exec-once = ~/.config/nwg-dock-hyprland/launch.sh


# keyboard abd touchpad
input {
    kb_layout = us,latam
    kb_variant =
    kb_model =
    kb_options = grp:alt_space_toggle
    numlock_by_default = true
    mouse_refocus = false

    follow_mouse = 1
    touchpad {
        natural_scroll = true
        middle_button_emulation = true
        clickfinger_behavior = false
        disable_while_typing = true
        scroll_factor = 1.0  # Touchpad scroll factor
    }
    sensitivity = 0 # Pointer speed: -1.0 - 1.0, 0 means no modification.
}



# shorcuts
bind = $mainMod, SPACE, exec, pkill rofi || rofi -show drun -replace -i # Open application launcher
bind = $mainMod, L, exec, hyprlock # Lock screen
bind = $mainMod SHIFT, Q, exec, wlogout # Start wlogout
bind = $mainMod, F1, exec, intellij-idea-ultimate-edition # Start IDE
bind = $mainMod, F2, exec, spotify # Start Spotify
bind = $mainMod, M, fullscreen, 1
bind = $mainMod, C, centerwindow
bind = $mainMod, J, cyclenext
bind = $mainMod, ESC, exit
bind = $mainMod, R, forcerendererreload
unbind = $mainMod SHIFT, Q
bind = $mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:'| xargs kill

# recordar cambiar la propiedad HandlePowerKey=ignore en /etc/systemd/logind.service y luego reinir systemd-logind.service 
bind = , XF86PowerOff, exec, wlogout

# monitor
monitor=,1600x900@60,auto,1



# env vars

# se utiliza la tarjeta intel por defecto
#env = AQ_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0
env = AQ_DRM_DEVICES,/dev/dri/card1


# reglas de ventana
#windowrule = fullscreen, ^(kitty)$
windowrulev2 = workspace 1, class:^(kitty)$
#windowrulev2 = workspace 2, class:^(?i).*.intellij.*
#windowrulev2 = workspace 2, initialClass:^(?i).*.java.*
windowrulev2 = workspace 3, class:^(google-chrome)$
#windowrulev2 = workspace 4, class:.*brave.*
#windowrulev2 = workspace 4, initialTitle:*Brave.*
#windowrulev2 = workspace 5, class:^(nautilus)$
windowrulev2 = workspace 8, class:^(spotify)$
windowrulev2 = workspace 9, class:^(whatsdesk)$

# layout
general {
    gaps_in = 10
    gaps_out = 14
    border_size = 2
    col.active_border = $color11
    col.inactive_border = rgba(ffffffff)
    layout = master
    resize_on_border = true
}

master {
    allow_small_split = false                 # Enable adding additional master windows in a horizontal split style
    special_scale_factor = 1.0               # The scale of the special workspace windows. [0.0 - 1.0]
    mfact = 0.7                              # The size as a percentage of the master window (e.g., 0.55 means 55% master, 45% slave)
    new_status = master                        # New window status: master, slave, or inherit from focused window
    new_on_top = false                        # Whether a newly opened window should be on the top of the stack
    new_on_active = none                      # Placement of new window: before, after, or none
    orientation = left                        # Default placement of the master area: left, right, top, bottom, or center
    inherit_fullscreen = true                 # Inherit fullscreen status when cycling/swapping to another window
    always_center_master = false              # Keep the master window centered when orientation=center and it's the only window
    smart_resizing = true                     # Determine resizing direction based on mouse position on the window
    drop_at_cursor = true                     # Place dragged/dropped windows at cursor position or stack top/bottom
}

bind = $mainMod, K, layoutmsg, swapwithmaster master

group {
    auto_group = false                         # Automatically group new windows into the focused unlocked group
    insert_after_current = true               # New windows in a group spawn after the current window
    focus_removed_window = true               # Focus on the window that has just been moved out of the group
    drag_into_group = 1                       # 0 = disabled, 1 = enabled, 2 = only via groupbar
    merge_groups_on_drag = true               # Allow dragging one group into another
    merge_groups_on_groupbar = true           # Merge groups when dragged into another's groupbar
    merge_floated_into_tiled_on_groupbar = false  # Disable merging floating windows into tiled groups via groupbar
    group_on_movetoworkspace = false          # Disable merging windows into a workspaceâ€™s solitary unlocked group

    # Colors for group borders
    col.border_active = 0x66ffff00            # Active group border color
    col.border_inactive = 0x66777700          # Inactive group border color
    col.border_locked_active = 0x66ff5500     # Active locked group border color
    col.border_locked_inactive = 0x66775500   # Inactive locked group border color
}
